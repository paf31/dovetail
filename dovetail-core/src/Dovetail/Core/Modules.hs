{-# LANGUAGE OverloadedStrings #-}

module Dovetail.Core.Modules where

import Data.Text (Text)

modules :: [Text]
modules =
  [ "Type.Proxy"
  , "Type.Data.RowList"
  , "Type.Data.Row"
  , "Record.Unsafe"
  , "Data.NaturalTransformation"
  , "Data.Boolean"
  , "Control.Semigroupoid"
  , "Data.Symbol"
  , "Control.Category"
  , "Data.Show"
  , "Data.Unit"
  , "Data.Void"
  , "Data.HeytingAlgebra"
  , "Data.Semiring"
  , "Data.Semigroup"
  , "Data.Generic.Rep"
  , "Data.Ring"
  , "Data.BooleanAlgebra"
  , "Data.Eq"
  , "Data.CommutativeRing"
  , "Data.Ordering"
  , "Data.EuclideanRing"
  , "Data.Ord"
  , "Data.DivisionRing"
  , "Data.Field"
  , "Data.Monoid"
  , "Data.Function"
  , "Data.Bounded"
  , "Data.Functor"
  , "Control.Apply"
  , "Data.Monoid.Generic"
  , "Data.Bounded.Generic"
  , "Control.Applicative"
  , "Control.Bind"
  , "Control.Monad"
  , "Prelude"
  , "Data.Semiring.Generic"
  , "Data.Monoid.Additive"
  , "Data.Monoid.Dual"
  , "Data.Monoid.Multiplicative"
  , "Data.Ord.Generic"
  , "Data.HeytingAlgebra.Generic"
  , "Data.Ring.Generic"
  , "Data.Show.Generic"
  , "Data.Monoid.Conj"
  , "Data.Semigroup.Generic"
  , "Data.Semigroup.First"
  , "Data.Semigroup.Last"
  , "Data.Eq.Generic"
  , "Data.Monoid.Disj"
  , "Data.Monoid.Endo"
  , "Unsafe.Coerce"
  , "Safe.Coerce"
  , "Data.Newtype"
  , "Control.Lazy"
  , "Control.Extend"
  , "Control.Alt"
  , "Control.Plus"
  , "Control.Comonad"
  , "Control.Alternative"
  , "Control.MonadZero"
  , "Control.MonadPlus"
  , "Data.Monoid.Alternate"
  , "Data.Functor.Invariant"
  , "Data.Const"
  , "Data.Maybe"
  , "Data.Maybe.Last"
  , "Data.Maybe.First"
  , "Data.Either"
  , "Data.Either.Nested"
  , "Data.Either.Inject"
  , "Data.Tuple"
  , "Data.Tuple.Nested"
  , "Data.Bifunctor"
  , "Control.Biapply"
  , "Control.Biapplicative"
  , "Data.Bifunctor.Join"
  , "Data.Functor.Contravariant"
  , "Data.Op"
  , "Data.Predicate"
  , "Data.Comparison"
  , "Data.Equivalence"
  , "Data.Divide"
  , "Data.Divisible"
  , "Data.Decide"
  , "Data.Decidable"
  , "Data.Identity"
  , "Type.Equality"
  , "Data.Distributive"
  , "Data.Exists"
  , "Data.Profunctor"
  , "Data.Profunctor.Closed"
  , "Data.Profunctor.Join"
  , "Data.Profunctor.Split"
  , "Data.Profunctor.Strong"
  , "Data.Profunctor.Costrong"
  , "Data.Profunctor.Cochoice"
  , "Data.Profunctor.Choice"
  , "Data.Profunctor.Star"
  , "Data.Functor.App"
  , "Data.Functor.Compose"
  , "Data.Functor.Coproduct"
  , "Data.Functor.Product"
  , "Data.Functor.Costar"
  , "Data.Functor.Joker"
  , "Data.Functor.Clown"
  , "Data.Functor.Flip"
  , "Data.Functor.Product2"
  , "Data.Functor.Coproduct.Inject"
  , "Data.Functor.Coproduct.Nested"
  , "Data.Functor.Product.Nested"
  , "Data.Ord.Down"
  , "Data.Ord.Min"
  , "Data.Ord.Max"
  , "Data.Traversable.Accum"
  , "Data.Traversable.Accum.Internal"
  , "Data.FunctorWithIndex"
  , "Data.Foldable"
  , "Data.Bifoldable"
  , "Data.FoldableWithIndex"
  , "Data.Traversable"
  , "Data.Semigroup.Foldable"
  , "Data.Semigroup.Traversable"
  , "Data.Bitraversable"
  , "Data.TraversableWithIndex"
  , "Partial"
  , "Partial.Unsafe"
  , "Data.Unfoldable1"
  , "Data.Unfoldable"
  , "Data.NonEmpty"
  , "Effect"
  , "Effect.Unsafe"
  , "Effect.Uncurried"
  , "Effect.Class"
  , "Effect.Ref"
  , "Control.Monad.Rec.Class"
  , "Control.Monad.ST.Internal"
  , "Control.Monad.ST"
  , "Control.Monad.ST.Global"
  , "Control.Monad.ST.Ref"
  , "Control.Monad.ST.Class"
  , "Data.Array.ST"
  , "Data.Array.ST.Partial"
  , "Data.Array.ST.Iterator"
  , "Data.Array.NonEmpty.Internal"
  , "Data.Array"
  , "Data.Array.Partial"
  , "Data.Array.NonEmpty"
  , "Effect.Console"
  , "Effect.Class.Console"
  , "Test.Assert"
  , "Data.Lazy"
  , "Data.List.Lazy.Types"
  , "Data.List.Types"
  , "Data.List.Internal"
  , "Data.List.Lazy"
  , "Data.List"
  , "Data.List.ZipList"
  , "Data.List.Lazy.NonEmpty"
  , "Data.List.Partial"
  , "Data.List.NonEmpty"
  , "Data.CatQueue"
  , "Data.CatList"
  , "Control.Monad.Gen.Class"
  , "Control.Monad.Gen"
  , "Control.Monad.Gen.Common"
  , "Data.Enum"
  , "Data.Enum.Generic"
  , "Data.Enum.Gen"
  , "Data.Function.Uncurried"
  , "Math"
  , "Data.Number.Approximate"
  , "Data.Number.Format"
  , "Data.Number"
  , "Data.Int.Bits"
  , "Data.Int"
  , "Data.Map.Internal"
  , "Data.Set"
  , "Data.Map"
  , "Data.Set.NonEmpty"
  , "Data.Map.Gen"
  -- "Data.Time.Duration"
  -- "Data.Time.Duration.Gen"
  -- "Data.Time.Component"
  -- "Data.Date.Component"
  -- "Data.Time.Component.Gen"
  -- "Data.Time"
  -- "Data.Date.Component.Gen"
  -- "Data.Date"
  -- "Data.Time.Gen"
  -- "Data.Date.Gen"
  -- "Data.DateTime"
  -- "Data.DateTime.Gen"
  -- "Data.DateTime.Instant"
  -- "Data.Interval.Duration"
  -- "Data.Interval"
  -- "Data.Interval.Duration.Iso"
  , "Effect.Exception"
  , "Effect.Exception.Unsafe"
  , "Data.String.Unsafe"
  , "Data.String.Pattern"
  , "Data.String.Common"
  , "Data.String.CodeUnits"
  , "Data.Char"
  , "Data.Char.Gen"
  , "Data.String.Gen"
  , "Data.String.CodePoints"
  , "Data.String"
  , "Data.String.NonEmpty.Internal"
  , "Data.String.CaseInsensitive"
  , "Data.String.Regex.Flags"
  , "Data.String.NonEmpty.CodeUnits"
  , "Data.String.Regex"
  , "Data.String.NonEmpty.CodePoints"
  , "Data.String.Regex.Unsafe"
  , "Data.String.NonEmpty"
  , "Data.String.NonEmpty.CaseInsensitive"
  , "Control.Comonad.Trans.Class"
  , "Control.Monad.Cont.Class"
  , "Control.Monad.Trans.Class"
  , "Control.Monad.Reader.Class"
  , "Control.Comonad.Traced.Trans"
  , "Control.Comonad.Store.Trans"
  , "Control.Monad.State.Class"
  , "Control.Monad.Writer.Class"
  , "Control.Comonad.Traced.Class"
  , "Control.Monad.Cont.Trans"
  , "Control.Comonad.Traced"
  , "Control.Monad.Error.Class"
  , "Control.Monad.Cont"
  , "Control.Monad.Maybe.Trans"
  , "Control.Monad.RWS.Trans"
  , "Control.Monad.Reader.Trans"
  , "Control.Monad.Except.Trans"
  , "Control.Monad.Writer.Trans"
  , "Control.Monad.State.Trans"
  , "Control.Monad.Reader"
  , "Control.Monad.Except"
  , "Control.Monad.Writer"
  , "Control.Monad.State"
  , "Control.Monad.RWS"
  , "Control.Comonad.Env.Trans"
  , "Control.Monad.Identity.Trans"
  , "Control.Comonad.Env.Class"
  , "Control.Comonad.Store.Class"
  , "Control.Comonad.Env"
  , "Control.Comonad.Store"
  , "Control.Monad.List.Trans"
  -- "Foreign"
  -- "Foreign.Keys"
  -- "Foreign.Index"
  , "Type.Function"
  , "Type.Row"
  , "Type.Data.Boolean"
  , "Type.Data.Ordering"
  , "Type.Data.Symbol"
  , "Type.RowList"
  , "Type.Prelude"
  , "Type.Row.Homogeneous"
  -- "Foreign.Object.ST"
  -- "Foreign.Object"
  -- "Foreign.Object.Unsafe"
  -- "Foreign.Object.ST.Unsafe"
  -- "Foreign.Object.Gen"
  , "Data.Yoneda"
  , "Data.Coyoneda"
  , "Control.Monad.Free"
  , "Control.Comonad.Cofree"
  , "Control.Monad.Trampoline"
  , "Control.Monad.Free.Class"
  , "Control.Comonad.Cofree.Class"
  , "Data.Graph"
  , "Effect.Random"
  , "Random.LCG"
  , "Control.Parallel.Class"
  , "Control.Parallel"
  , "PSCI.Support"
  , "Record.Unsafe.Union"
  , "Record.Builder"
  , "Record"
  , "Test.QuickCheck.Gen"
  , "Test.QuickCheck.Arbitrary"
  , "Test.QuickCheck"
  , "Data.Semiring.Free"
  , "Data.Validation.Semigroup"
  , "Data.Validation.Semiring"
  ]